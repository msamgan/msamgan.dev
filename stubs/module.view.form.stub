import { useForm } from '@inertiajs/react'
import TextInput from '@/Components/TextInput.jsx'
import InputLabel from '@/Components/InputLabel.jsx'
import InputError from '@/Components/InputError.jsx'
import { dataObject } from '@/Pages/{studly}/helper.js'
import { useEffect, useState } from 'react'
import { routes } from '@/Utils/routes/index.js'

export default function Form({ get{plural_studly}, {camel} = null}) {
    const [action, setAction] = useState(routes.{snake}.store)
    const { data, setData, post, errors, processing, recentlySuccessful, reset } = useForm(dataObject(null))

    useEffect(() => {
        setAction({camel} ? routes.{snake}.update({camel}.id) : routes.{snake}.store)
        setData(dataObject({camel}))
    }, [{camel}])

    const submit = (e) => {
        e.preventDefault()

        post(action, {
            onSuccess: (r) => {
                if (!{camel}) {
                    reset('name')
                }

                get{plural_studly}()
            },
            onError: () => {},
        })
    }

    return (
            <FormLayout submit={submit} processing={processing} recentlySuccessful={recentlySuccessful}>
                <div className="col-12 col-md-12">
                    <div className="form-floating form-floating-outline">
                        <TextInput
                            type="text"
                            value={data.name}
                            onChange={(e) => setData('name', e.target.value)}
                            id="user-name"
                            placeholder="Name"
                            required={true}
                            isFocused={true}
                        />
                        <InputLabel htmlFor="user-name" required={true}>
                            Name
                        </InputLabel>
                        <InputError className="mt-2" message={errors.name} />
                    </div>
                </div>
            </FormLayout>
    )
}
